import os
import glob
from html_templates import generate_from_base_html
import logging


logger = logging.getLogger("root")


def generate_student_index_html(student_data, student_directory):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç index.html –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º —Ñ–∞–π–ª–æ–≤ –≤ –µ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–µ
    """
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ (–∏—Å–∫–ª—é—á–∞—è —Å–∞–º index.html)
    files = []
    if os.path.exists(student_directory):
        for file_path in glob.glob(os.path.join(student_directory, "*")):
            if os.path.isfile(file_path):
                filename = os.path.basename(file_path)
                if filename != "index.html":  # –ò—Å–∫–ª—é—á–∞–µ–º —Å–∞–º index.html
                    file_size = os.path.getsize(file_path)
                    files.append(
                        {"name": filename, "size": file_size, "path": filename}
                    )

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø–æ –∏–º–µ–Ω–∏
    files.sort(key=lambda x: x["name"])

    html_content = f"""

    <div class="header">
        <h1>üéì {student_data['name']}</h1>
        <p>–†–µ–π—Ç–∏–Ω–≥–∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω —Å—Ç—É–¥–µ–Ω—Ç–∞</p>
    </div>
    <div class="content">
    <div class="card">
            <h2>üìã –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
            <div class="info-grid">
                <div class="info-item">
                    <span class="info-label">üë• –ì—Ä—É–ø–ø–∞:</span>
                    <span class="info-value">{student_data.get('group', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}</span>
                </div>
                <div class="info-item">
                    <span class="info-label">üîë –õ–æ–≥–∏–Ω:</span>
                    <span class="info-value">{student_data.get('login', '–ù–µ —É–∫–∞–∑–∞–Ω')}</span>
                </div>
            </div>
        </div>

        <h2>üìÑ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–π—Ç–∏–Ω–≥–∏:</h2>
        <div class="card">
"""

    if files:
        html_content += """
        <table>
            <thead>
                <tr>
                    <th>–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞</th>
                </tr>
            </thead>
            <tbody>
        """

        for file_info in files:
            html_content += f"""
                <tr>
                    <td>
                        <a href="{file_info['path']}" class="file-link">{file_info['name'].rsplit('.', 1)[0]}</a>                        
                    </td>
                </tr>
            """

        html_content += """
            </tbody>
        </table>
        """
    else:
        html_content += """
        <div class="empty-folder">
            <h3>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–π—Ç–∏–Ω–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
            <p>–ù–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</p>
        </div>
        """

    html_content += f"""
        <div class="last-update">
            –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞: <span id="generation-time">{get_current_time()}</span>
        </div>
    </div></div>
        <div class="footer">
        <p>¬© 2025 –ö–∞—Ñ–µ–¥—Ä–∞ –ú–û–≠–í–ú | –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞</p>
    </div>
    </div>
</body>
</html>
"""

    return generate_from_base_html(
        f"{student_data['name']} - –†–µ–π—Ç–∏–Ω–≥–∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω —Å—Ç—É–¥–µ–Ω—Ç–∞", html_content
    )


def get_current_time():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç—Ä–æ–∫–∏"""
    from datetime import datetime

    return datetime.now().strftime("%Y-%m-%d %H:%M:%S")


def create_student_directories(students_data, base_directory):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–∞—Ç–∞–ª–æ–≥–∏ –¥–ª—è –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç index.html
    """
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π –∫–∞—Ç–∞–ª–æ–≥ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    os.makedirs(base_directory, exist_ok=True)

    for student in students_data:
        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞
        student_dir = os.path.join(base_directory, student["hash"])
        os.makedirs(student_dir, exist_ok=True)

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º index.html –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞
        index_html = generate_student_index_html(student, student_dir)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º index.html –≤ –∫–∞—Ç–∞–ª–æ–≥–µ —Å—Ç—É–¥–µ–Ω—Ç–∞
        index_path = os.path.join(student_dir, "index.html")
        with open(index_path, "w", encoding="utf-8") as f:
            f.write(index_html)

        logger.info(f"–°–æ–∑–¥–∞–Ω index.html –¥–ª—è {student['name']} –≤ {student_dir}")
